{
	"info": {
		"_postman_id": "b6eabb21-66d2-4aed-9071-2aa1242d65a8",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HW2_EP1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/first\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"pm.test('Body matches strings', function(){\r",
							"    pm.expect(pm.response.text()).to.include('This is the first responce from server!');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2_EP2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"var resp = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"name_response = name_request (name print by hand)\", function () {\r",
							"    pm.expect(resp.name).to.eql('Luba')\r",
							"});\r",
							"// console.log('response name = ' + resp.name)\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test('age_response = age_request (age print by hand)', function(){\r",
							"    pm.expect(resp.age).to.eql('34')\r",
							"})\r",
							"// console.log('response age = ' + resp.age)\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test('salary_response = salary_request (salary print by hand)', function(){\r",
							"    pm.expect(resp.salary).to.eql(1000)\r",
							"})\r",
							"// console.log('response salary = ' + resp.salary)\r",
							"\r",
							"// 7. Спарсить request.\r",
							"var reqBody = request.data;\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request).\r",
							"pm.test('name_response = name_request (name from request)', function(){\r",
							"    pm.expect(resp.name).to.eql(reqBody.name)\r",
							"})\r",
							"\r",
							"// console.log('request name = ' + reqBody.name)\r",
							"\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test('age_response = age_request (age from request)', function(){\r",
							"    pm.expect(resp.age).to.eql(reqBody.age)\r",
							"})\r",
							"// console.log('request age = ' + reqBody.age)\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test('salary_response = salary_request (salary from request', function(){\r",
							"    pm.expect(resp.salary).to.eql(+reqBody.salary)\r",
							"})\r",
							"// console.log('ТИП resp = ' + typeof(resp.salary))    \r",
							"// console.log('ТИП req = ' + typeof(reqBody.salary)) \r",
							"\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"console.log(resp.family);\r",
							"\r",
							"\r",
							"// // 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test('salary after 1_5_year = salary from request *4', function(){\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(reqBody.salary*4)\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Luba",
							"type": "text"
						},
						{
							"key": "age",
							"value": "34",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2_EP3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test('Status code is 200', function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"var resp = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request.\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name_response = name_request (name from request)\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"var agecheck = +req.age;\r",
							"var agerespcheck = +resp.age;\r",
							"pm.test('age_response = age_request (age from request)', function (){\r",
							"    pm.expect(agerespcheck).to.eql(agecheck)\r",
							"});\r",
							"// console.log('agecheck type = ' + typeof(req.age))\r",
							"// console.log('respage type = ' + typeof(resp.age))\r",
							"\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var checksalary = + req.salary;\r",
							"pm.test('salary_response = salary_request (salary fron request)', function(){\r",
							"    pm.expect(resp.salary).to.eql(checksalary)\r",
							"})\r",
							"// console.log('checksalaryy type = ' + typeof(checksalary))\r",
							"// console.log('resp.salary type = ' + typeof(resp.salary))\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"console.log(\"response family = \", resp.family)\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test('dog has name parameter', function() {\r",
							"  pm.expect(resp).to.have.property('name');\r",
							"});\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test('dog has age parameter', function(){\r",
							"    pm.expect(resp).to.have.property('age')\r",
							"})\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"var lukyname = resp.family.pets.dog.name\r",
							"pm.test('dog name - Luky', function(){\r",
							"    pm.expect(lukyname).to.eql('Luky')\r",
							"})\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"var agecheck =  resp.family.pets.dog.age\r",
							"pm.test('dog age = 4', function(){\r",
							"    pm.expect(agecheck).to.eql(4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Luba&age=34&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Luba"
						},
						{
							"key": "age",
							"value": "34"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2_EP4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test('Status code is 200', function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"// 3. Спарсить response body в json.\r",
							"var resp = pm.response.json()\r",
							"\r",
							"// 4. Спарсить request.\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test('name_response = name_request (name from request)', function(){\r",
							"    pm.expect(resp.name).to.eql(req.name)\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"var agecheck = +req.age\r",
							"pm.test('age_response = age_request (age from request)', function(){\r",
							"    pm.expect(resp.age).to.eql(agecheck)\r",
							"});\r",
							"// console.log('type req.age = ' + typeof(agecheck))\r",
							"// console.log('type resp.age = ' + typeof(resp.age))\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request. \r",
							"console.log('salary from request =', req.salary)\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"console.log('salary from response = ', resp.salary)\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"var salaryzero = resp.salary[0]\r",
							"console.log('salary[0] from response = '+ salaryzero)\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"var salaryone = resp.salary[1]\r",
							"console.log('salary[1] from response = ' + salaryone)\r",
							"\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"var salarytwo = resp.salary[2]\r",
							"console.log('salary[2] from response = ' + salarytwo)\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"var salary_zero_check = resp.salary[0]\r",
							"pm.test('salary[0]=salary_from_request', function(){\r",
							"    pm.expect(salary_zero_check).to.eql(+req.salary)\r",
							"});\r",
							"// console.log('salary_zero_check type = ' + typeof(salary_zero_check))\r",
							"// console.log('req.salary = ' + typeof(req.salary))\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"var salary_one_check = +resp.salary[1]\r",
							"pm.test('salary[1]=salary_from_request*2', function(){\r",
							"    pm.expect(salary_one_check).to.eql(+req.salary*2)\r",
							"});\r",
							"// console.log('salary_one_check type = ' + typeof(salary_one_check))\r",
							"// console.log('req.salary = ' + typeof(req.salary))\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"var salary_two_check = +resp.salary[2]\r",
							"pm.test('salary[2]=salary_from_request*3', function(){\r",
							"    pm.expect(salary_two_check).to.eql(req.salary*3)\r",
							"});\r",
							"// console.log('salary_two_check type = ' + typeof(salary_two_check))\r",
							"// console.log('req.salary = ' + typeof(+req.salary))\r",
							"\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// 18. Передать в окружение переменную name\r",
							"var name_env = resp.name;\r",
							"pm.environment.set(\"name\", name_env)\r",
							"\r",
							"// 19. Передать в окружение переменную age\r",
							"var age_env = resp.age;\r",
							"pm.environment.set(\"age\", age_env)\r",
							"\r",
							"// 20. Передать в окружение переменную salary\r",
							"var salary_env = resp.salary[0];\r",
							"pm.environment.set(\"salary\", salary_env)\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var salary = resp.salary\r",
							"for (var i of salary){\r",
							"    console.log('salary = ' + i)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Luba&age=34&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Luba"
						},
						{
							"key": "age",
							"value": "34"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HW2_EP5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test('Status code is 200', function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"var resp = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request.\r",
							"var req = request.data;\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test('check parameter in response - start_qa_salary', function(){\r",
							"    pm.expect(resp).to.have.property('start_qa_salary')\r",
							"})\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test('check parameter in response - qa_salary_after_6_months', function(){\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_6_months')\r",
							"})\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test('check parameter in response - check qa_salary_after_12_months', function(){\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_12_months')\r",
							"})\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test('check parameter in response - qa_salary_after_1.5_year', function(){\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_1.5_year')\r",
							"})\r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test('check parameter in response - qa_salary_after_3.5_years', function(){\r",
							"    pm.expect(resp).to.have.property('qa_salary_after_3.5_years')\r",
							"})\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test('check parameter in response - person', function(){\r",
							"    pm.expect(resp).to.have.property('person')\r",
							"})\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test('start_qa_salary=salary from request', function(){\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary)\r",
							"})\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test('qa_salary_after_6_months = salary from request*2 ', function(){\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary*2)\r",
							"})\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test('qa_salary_after_12_months = salary from request*2.7', function(){\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary*2.7)\r",
							"})\r",
							"\r",
							"// 17.Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test('qa_salary_after_1.5_year = salary from request*3.3', function () {\r",
							"    pm.expect(resp['qa_salary_after_1.5_year']).to.eql(req.salary*3.3)\r",
							"    });\r",
							"\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test('qa_salary_after_3.5_years = salary*3.8', function(){\r",
							"    pm.expect(resp['qa_salary_after_3.5_years']).to.eql(req.salary*3.8)\r",
							"})\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"var checku = +resp.person.u_name[1]\r",
							"pm.test('u_name[1] from resp.person = salary from request', function(){\r",
							"    pm.expect(checku).to.eql(+req.salary)\r",
							"})\r",
							"\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"var check_u_age = +resp.person.u_age\r",
							"pm.test('u_age from resp.pereson = age from request', function(){\r",
							"    pm.expect(check_u_age).to.eql(+req.age)\r",
							"})\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"var check_u_s = +resp.person.u_salary_5_years\r",
							"pm.test('u_salary_5_years from resp.person = salary*4.2 from request', function(){\r",
							"    pm.expect(check_u_s).to.eql(+req.salary*4.2)\r",
							"})\r",
							"\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for (var i of resp.person.u_name){\r",
							"   console.log(i)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}